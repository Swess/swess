<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tech Art on Swess</title><link>https://swess.github.io/tags/tech-art/</link><description>Recent content in Tech Art on Swess</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://swess.github.io/tags/tech-art/index.xml" rel="self" type="application/rss+xml"/><item><title>Half-Lambert Shader</title><link>https://swess.github.io/projects/half-lambert-shader/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://swess.github.io/projects/half-lambert-shader/</guid><description>Created a fully customized lighting Uber shader for our current project at Canorous Interactive, supporting nearly all the same features as Unity&amp;rsquo;s main Lit shader.
The Half-Lambert lighting term is utilized in various commercial games such as Team Fortress 2 and Valorant, and extensively described online. I won&amp;rsquo;t delve into the technical details and differences between the various lighting techniques, but here are some link for quick explanations and examples.</description></item><item><title>ScreenSpace Simulation</title><link>https://swess.github.io/projects/screenspace-simulation-vfx/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://swess.github.io/projects/screenspace-simulation-vfx/</guid><description>This is a 2D fullscreen simulation VFX driven by the pixel channels&amp;rsquo; values. From the initial snapshot, different channels and values are stored in texture buffers for the simulation to consume and modify.
In the example video below, an outward velocity vector is added so that the displacement is directed toward the edges of the screen.
Various controls are available for the simulation to achieve different results. For example, dissipation per color channel, viscosity, velocity direction, and intensity, among others.</description></item><item><title>Stylized Fog Shader</title><link>https://swess.github.io/projects/fogshader/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://swess.github.io/projects/fogshader/</guid><description>Stylized fog shader made in Unity (URP 12.1.14). This shader was made and used in our current project at Canorous Interactive for different contexts.
Controls over textures, colors, and different parameters renders it very flexible and allow for a very wide range of stylization and usecases.
This is not publicly available.</description></item><item><title>Stylized Arcs &amp; Sparkles VFX</title><link>https://swess.github.io/projects/teleportvfx/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://swess.github.io/projects/teleportvfx/</guid><description>A VFX shader and particle system for stylized arcs and sparkles made in Unity (URP 12.1.14).
This was made and used in our current project at Canorous Interactive for different contexts and with different variants.
This is not publicly available.</description></item><item><title>Tile Pattern Tool</title><link>https://swess.github.io/projects/tile-pattern/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://swess.github.io/projects/tile-pattern/</guid><description>Procedural placement tool</description></item></channel></rss>